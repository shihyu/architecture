// project1.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include "pch.h"
#include <iostream>

int main()
{
	//一：课程总述
	//这是一门以讲解 网络通讯和架构为主的实战课
	   //网络通讯：写自己能够驾驭的网络通讯代码来实现具体的网络通讯功能
	   //架构：架构师
	        //1)架构师的责任：负责产品/软件 的总体规划设计 ,把掌握的技术整合/融合，从而构成一个产品。
	        //2)架构师写代码的问题：从高级或者资深软件开发工程师升上去 比较靠谱
	     //程序员：靠代码说话和吃饭的，扎实，从点到面来学；把每一段代码写好，自然就能连成一个面；
	   //实战：“商业质量的代码”； 没有15年的坚持不断的磨砺的经验，难以达到写商业质量的能力；
	    //即使你的动手能力达不到学了10几年的老司机的程度；大家的眼界也需要达到这个高度；其余的交给时间；
	     //哪怕大家眼高手低，也远远强过 眼低手低
	        //1)学具备商业质量的代码 ：学习好nginx（web服务器），里边最精彩，最核心的代码；
	        //2)写具备商业质量的代码：老师带着大家来写； 逐行的细致讲解；成为大家自己的东西（汇集到大家自己的代码库里边来）
	        //3)验证商业质量的代码： 积累到 一定程度，你的信心自然来；
	    //70-80%需求是linux c++程序员；    20-30%的才是windows c++


	//二：基础要求和学习方法
	    //只要求大家有c++开发基础；会照顾到初学网络通讯的人的基础；
	     //课程前期，我们重点攻破：在linux下，写网络通讯程序这个关卡，其他的，以后再说；
	

	//三：简要自我介绍、讲解特点
	//95：24年c++； 讲解详细，到位，值得大家信赖和托付；

	//四：课程详细说明
	//(1)现学现卖；
	//(2)拔苗助长：希望大家1年内，薪水有一个质的提高；超过月薪30K;
	   //用到啥讲啥，暂时没有用到的坚决不讲
	//(3)讲课计划：老师目前没有太详细和具体的计划；老师有一个大的规划；
	     //3.1：讲解的核心围绕着通讯架构这个主题不变；
	     //3.2：讲解细节，我们同时会讲解很多linux下的c++编程； 
	     //3.3：量化一个具体的小目标：先以学习nginx源码为主，把其中的epoll这个知识点学透
	//(4)我们自己的知识库
	 //围绕  建立自己的知识库；
	   //知识库，我们自己所积累的一系列代码片段,这些代码是我们能够完全理解和吃透的，能够随心所欲的驾驭的；
	   //你能驾驭的代码越多，你越值钱
	//(5)讲解进度
	 //每周最少一节
	//(6)课程价格和分卷 ,高级课程，价格要适当的贵一些；
	  //价格对得起课程质量，对得起老师的良心，对得起大家的收获
	//分卷：是为了增加老师的收入，每一卷可以看成一门课程；分卷越多，对大家越好；
	 //大家拒绝盗版，购买正版；大家对老师的支持就对大家自己的支持；
	//(7)讲课方法：很主观 ,整门课程以写代码为主；
	 
	//五：推荐书籍
	//工具书


	//六：结语


















	   	  


   
}


