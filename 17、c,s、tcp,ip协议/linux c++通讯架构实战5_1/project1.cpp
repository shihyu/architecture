// project1.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include "pch.h"
#include <iostream>
#include <stdarg.h>
#include <stdio.h>

using namespace std;
#pragma warning(disable : 4996)

int main()
{
	//本节课是一些必须要讲解的基础知识；请大家认真倾听；
	//一：客户端与服务器
	//客户端：client，一般字母c表示
	//服务器：server，一般字母s表示 ,所以c/s一般就是 ：客户端/服务器
	//客户端：就是一个程序，
	//服务器：也是 一个程序；
	//（1.1）解析一个浏览器访问网页的过程

	//（1.2）客户端服务器角色规律总结
	//a)数据通讯总在两端进行，其中一端叫客户端，另一端叫服务器端；
	//b)总有一方先泛起第一个数据包，这发起第一个数据包的这一端，就叫客户端【浏览器】；被动收到第一个数据包这端，叫服务器端【淘宝服务器】；
	//c)连接建立起来，数据双向流动，这叫 双工【你可以发数据包给我，我也可以发数据包给你】
	//d)既然服务器端是被动接收连接，那么客户端必须得能够找到服务器在哪里；
	//我浏览器要访问淘宝网，我需要知道淘宝服务器的地址【ip地址：192.168.1.100 三个点分隔四个数】，
	      //以及淘宝服务器的姓名【端口号，这是 一个无符号数字，范围 0-65535之间的一个数字】
	// 淘宝网服务器【nginx服务器】会调用listen()函数来监听80端口；
	//在编写网络通讯程序时，你只需要指定淘宝服务器的ip地址和淘宝服务器的端口号，就能够跟淘宝服务器进行通讯；
	//e)epoll

	//二：网络模型
	//（2.1）OSI七层网络模型:
	//物【物理层】 链【数据链路层】 网【网络层】 传【传输层】 会【会话层】 表【表示层】 应【应用层】
	//OSI(Open System Interconnect)：开放式系统互联；是ISO(国际标准化组织）在1985年研究的网络互联模型；
	//把一个要发送出去的数据包从里到外裹了7层，就跟 一个人一样，穿了7件衣服，一件套一件 ；最终把包裹了7层的数据包发送都网络上去了；

	//（2.2）TCP / IP协议四层模型
	//Transfer Control Protocol[传输控制协议]/Internet Protocol[网际协议];
	//tcp/ip实际是 一组 协议的代名词，而不仅仅是一个协议；
	//tcp/ip协议，其实每一层都对应着一些协议；

	//（2.3）TCP / IP协议的解释和比喻
	//我们把人看成 要发送出去的数据包；人出门上街 ，我们把外边的街道，就看成网络，我们人出门上街，就等于把数据包发送到互联网是上去；
	// 人     <=======>   数据包
	//街道    <=======>   互联网
	//人上街  <=======>   数据包发送到互联网上

	//人不能光腚上街，人要先穿内衣内裤【TCP】；套一个衬衣衬裤【IP】,套个外衣外裤【以太网帧】，可以出门了；
	// TCP        比喻成了   内衣内裤
	// IP         比喻成了   衬衣衬裤
	// 以太网帧   比喻成了   外衣外裤

	//你要发送 abc 这三个字母出去到网络上；
	  //加个tcp头【abc套了个内衣内裤】
	  //加个IP头【abc套了个衬衣衬裤】
	  //加个以太网帧头/尾【abc套了个外衣外裤】
	//加了这三个头一个尾之后，就认为这个数据包符合了TCP/IP协议，这个数据包能够被发送到网络上去了【人穿好了衣服可以出门了】；

	//三：最简单的客户端和服务器程序实现代码
	//a)客户端程序，服务器端程序；只具备演示价值，不具备商业价值。
	//b)最终epoll技术实现商用的服务器程序；
	//c)《Unix网络编程》第一卷；

	//（3.1）套接字socket概念
	//套接字(socket)：就是个数字，通过调用socket()函数来生成；这个数字具有唯一性；一直给你用，直到你调用close()函数把这个数字关闭；
	//文件描述符；一切皆文件，咱们就把socket也看成是文件描述符，我们可以用socket来收发数据；send(),recv();

	//（3.2）一个简单的服务器端通讯程序范例【看调用了哪些函数：面试官可能 会考】

	//（3.3）IP地址简单谈
	//192.168.1.100[IVP4]：理解成现实社会中的居住地址
	//192.168.1.100[IVP4]：第四个版本的IP地址格式；
	//发展处了新的IP地址版本【第六版】，IPV6
	//我们写通讯程序代码时是否需要根据ipv4,ipv6来调整呢？
	//a)写服务器程序，不用考虑ipv4,ipv6的问题，遵照ipv4规则写就行；
	//b)写客户端程序，只演示ipv4版本的客户端范例。
	//后续写项目老师会带着大家写同时兼容ipv4,ipv6【协议无关】客户端程序；

	//（3.4）一个简单的客户端通讯程序范例
	//c/s建立连接时双方彼此都要有 ip地址 /端口号；
	//连接一旦建立起来，那么双方的通讯【双工收发】，就只需要用双方彼此对应的套接字即可；

	//（3.5）客户端服务器程序综合演示和调用流程图
	//服务器端程序要先运行；

	//四：TCP和UDP的区别
	//TCP(Transfer Control Protocol)：传输控制协议
	//UDP(User Datagram Protocol)：用户数据报协议
	//socket()

	//TCP  比喻成  内衣内裤
	//UDP  比喻成  内衣内裤
	//a)TCP是大品牌内衣内裤，售后质量好；如果被偷取，厂家负责派人帮你找
	//b)UDP小品牌内衣内裤，没有什么售后服务；

	//TCP协议：可靠的面向连接的协议；数据包丢失的话操作系统底层会感知并且帮助你重新发送数据包；
	//UDP协议：不可靠的，无连接的协议；
	
	//优缺点：
	//a)tcp：可靠协议，必然要耗费更多的系统资源确保数据传输的可靠；
	      //得到好处就是只要不断线，传输给对方的数据，一定正确的，不丢失，不重复，按顺序到达对端；
	//b)udp：不可靠协议；发送速度特别快；但无法确保数据可靠性

	//各自的用途：
	//a)tcp：文件传输，收发邮件需要准确率高，但效率可以相对差；一般TCP比UDP用的范围和场合更广；
	//b)udp：qq聊天信息；DNS。。。。。。估计随着网络的发展，网络性能更好，丢包率更低，那么udp应用范围更广；

 	  

}


